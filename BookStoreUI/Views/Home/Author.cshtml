@{
    ViewData["Title"] = "Author";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<h1>Index</h1>*@
<p>
    <button id="btnOpenAddAuthorModal" class="btn btn-primary">Add New Author</button>

</p>
<table class="table">
    <thead>
        <tr>
            @*<th>
                    Author Id
                </th>*@
            <th>
                Author Name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="dvBody">
    </tbody>
</table>

<div id="AuthorModel" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Author Details</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <input type="hidden" id="hdnAuthorId" />
                            <label for="lblAuthorName" class="control-label col-md-5">Author Name</label>
                            <div class="col-md-7">
                                <input type="text" id="txtAuthorName" class="form-control" />
                                <span id="spnAuthorName" class="form-label text-danger" style="display:none;"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <input type="button" id="btnAddAuthor" value="Add" class="btn btn-success" />
                </div>
        </div>
    </div>
</div>
<script>
    let accessToken = null;
    $(document).ready(function () {
        accessToken = localStorage.getItem("accessToken");
        if (accessToken == null) {
            location.href = '/Home/Index';

        }
        getAllAuthors();
        $("#btnOpenAddAuthorModal").click(function () {
            $("#btnAddAuthor").val("Add");
            $("#AuthorModel").modal('show');
            clearModal();
        });

        $("#btnAddAuthor").click(function () {

            if (!ValidateForm()) {
                return false;
            }
            var Author = {
                "AuthorName": $("#txtAuthorName").val()
            };
            let methodType = "";
            let url = "";
            let AuthorId = $("#hdnAuthorId").val();
            if (AuthorId != null && AuthorId != '') {
                methodType = "PUT";
                url = ServiceUrl + "api/Author/" + AuthorId;
            } else {
                methodType = "POST";
                url = ServiceUrl + "api/Author";
            }
            var AuthorJson = JSON.stringify(Author);
            $.ajax({
                url: url,
                type: methodType,
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                data: AuthorJson,
                beforeSend: function () {
                    $("#loader").show();
                },
                complete: function () {
                    $("#loader").hide();
                },
                beforeSend: function () {
                    $("#loader").show();
                },
                complete: function () {
                    $("#loader").hide();
                },
                success: function (data) {
                    try {
                        getAllAuthors();
                        $("#AuthorModel").modal('hide');
                        clearModal();
                        alertify.success("Author " + (methodType =="POST"?"Added":"Updated"));
                    } catch (e) {
                        alertify.error("Error after adding Author" + e.message);
                        //alert("Error after adding Author" + e.message);
                    }
                },
                headers: {
                    Authorization: 'Bearer ' + accessToken
                },
                error: function (request, status, errorThrown) {
                    if (request.statusCode == 401) {
                        RedirectToLogin();
                    }
                    //alert("Error in adding Author" + e.message);
                    alertify.error("Error in adding Author" + e.message);
                    console.log(e);
                },

            });
        })
    });
    function getAllAuthors() {
        $.ajax({
            type: "GET",
            url: ServiceUrl + "api/Author",
            data: "{}",
            beforeSend: function () {
                $("#loader").show();
            },
            complete: function () {
                $("#loader").hide();
            },
            success: function (data) {
                try {
                    $("#dvBody").empty();
                    var dvRecord = "";
                    for (let i = 0; i < data.length; i++) {
                        dvRecord += addRecordToAuthorTable(data[i]);
                    }
                    $("#dvBody").append(dvRecord);
                } catch (e) {
                    alertify.error("Error in Storing Authors In table" + e.message);
                    //alert("Error in Storing Authors In table" + e.message);

                }
            },
            headers: {
                Authorization: 'Bearer ' + accessToken
            },
            error: function (request, status, errorThrown) {
                if (request.statusCode == 401) {
                    RedirectToLogin();
                }
                alertify.error("Error in getting all Authors");

                //alert("Error in getting all Authors");
            }

        });

    }
    function addRecordToAuthorTable(record) {
        let authorRecord = "";
        authorRecord += "<tr>";
        //authorRecord += "<td>" + record.authorId + "</td>";
        authorRecord += "<td>" + record.authorName + "</td>";
        authorRecord += "<td> <a href='#' onClick='OpenEditAuthorModal(" + record.authorId + ")' >Edit</a> | <a href='#' onClick='DeleteAuthor(" + record.authorId + ")' >Delete</a> </td>";
        authorRecord += "</tr>";

        return authorRecord;

    }
    function OpenEditAuthorModal(authorId) {
        $.ajax({
            type: "GET",
            url: ServiceUrl + "api/Author/" + authorId,
            data: "{}",
            beforeSend: function () {
                $("#loader").show();
            },
            complete: function () {
                $("#loader").hide();
            },
            success: function (data) {
                try {
                    $("#hdnAuthorId").val(data.authorId);
                    $("#txtAuthorName").val(data.authorName);
                    $("#btnAddAuthor").val("Edit");
                    $("#AuthorModel").modal('show');
                } catch (e) {
                    if (request.statusCode == 401) {
                        RedirectToLogin();
                    }
                    alertify.error("Error in Getting Author Details");

                    //alert("Error in Getting Author Details" + e.message);

                }
            },
            headers: {
                Authorization: 'Bearer ' + accessToken
            },
            error: function (request, status, errorThrown) {
                if (request.statusCode == 401) {
                    RedirectToLogin();
                }
                alertify.error("Error in getting current Author");

                //alert("Error in getting current Author");
            }

        });

    }

    function DeleteAuthor(authorId) {
        $.ajax({
            type: "DELETE",
            url: ServiceUrl + "api/Author/" + authorId,
            data: "{}",
            beforeSend: function () {
                $("#loader").show();
            },
            complete: function () {
                $("#loader").hide();
            },
            success: function (data) {
                try {
                    getAllAuthors();
                    alertify.success("Author Deleted");

                } catch (e) {
                    alertify.error("Error After Deleting Author");
                    //alert("Error After Deleting Author" + e.message);
                }
            },
            headers: {
                Authorization: 'Bearer ' + accessToken
            },
            error: function (request, status, errorThrown) {
                if (request.statusCode == 401) {
                    RedirectToLogin();
                }
                //alert("Error in Deleting Author");
                alertify.error("Error in Deleting Author");
            }
        });
    }
    function clearModal() {
        $("#hdnAuthorId").val("");
        $("#txtAuthorName").val("");
        $("#spnAuthorName").text("").hide();
    }

    function ValidateForm() {
        let authorName = $("#txtAuthorName").val();
        if (authorName === null || authorName.trim() === "") {
            $("#spnAuthorName").text("Author Name is required.");
            $("#spnAuthorName").show();
            return false;
        }
        else {
            $("#spnAuthorName").hide();
            return true;
        }
    }
</script>